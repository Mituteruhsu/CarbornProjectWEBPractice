@model DashboardChartsViewModel
@{
    ViewData["Title"] = "關鍵圖表";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container-fluid mt-3">
    <h2 class="mb-3">排放量重點視覺化</h2>

    <div class="row g-3">
        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">年度總排放量（所有公司）</div>
                <div class="card-body">
                    <canvas id="chartYearlyTotal" height="220"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">每公司年度平均排放量</div>
                <div class="card-body">
                    <canvas id="chartYearlyAvg" height="220"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">最新年度範疇比例 (@(Model.LatestScopeShares?.Any() == true ? Model.LatestScopeShares.First().Scope : "N/A"))</div>
                <div class="card-body d-flex justify-content-center align-items-center">
                    <canvas id="chartScopeShare" width="300" height="300"></canvas>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card h-100">
                <div class="card-header">最新年度公司排行（Top 10）</div>
                <div class="card-body">
                    <canvas id="chartTopCompanies" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // 將 Razor model 資料序列化給前端
    const yearlyTotals = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.YearlyTotals));
    const yearlyAverages = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.YearlyAverages));
    const scopeShares = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LatestScopeShares ?? new List<ScopeShareDto>()));
    const topCompanies = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TopCompaniesLatest ?? new List<TopCompanyDto>()));

    // Helper: 格式化數字（千分位）
    function formatNumber(n) {
        return n.toLocaleString?.() ?? n;
    }

    // 1) 年度總排放量（Line）
    (function renderYearlyTotal() {
        const ctx = document.getElementById('chartYearlyTotal').getContext('2d');
        const labels = yearlyTotals.map(x => x.Year);
        const data = yearlyTotals.map(x => Number(x.TotalEmission || 0));
        new Chart(ctx, {
            type: 'line',
            data: {
                labels,
                datasets: [{
                    label: '年度總排放量 (噸)',
                    data,
                    fill: true,
                    tension: 0.25,
                    pointRadius: 4,
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: true },
                    tooltip: {
                        callbacks: {
                            label: ctx => formatNumber(ctx.raw) + ' 噸'
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: { callback: value => formatNumber(value) }
                    }
                }
            }
        });
    })();

    // 2) 每公司年度平均（Bar）
    (function renderYearlyAvg() {
        const ctx = document.getElementById('chartYearlyAvg').getContext('2d');
        const labels = yearlyAverages.map(x => x.Year);
        const data = yearlyAverages.map(x => Number(x.AvgPerCompany || 0));
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels,
                datasets: [{
                    label: '每公司平均排放 (噸)',
                    data,
                    borderRadius: 6,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: { label: ctx => formatNumber(ctx.raw) + ' 噸' }
                    }
                },
                scales: {
                    y: { beginAtZero: true, ticks: { callback: v => formatNumber(v) } }
                }
            }
        });
    })();

    // 3) 範疇比例（Doughnut）
    (function renderScopeShare() {
        const ctx = document.getElementById('chartScopeShare').getContext('2d');
        const labels = scopeShares.map(s => s.Scope);
        const data = scopeShares.map(s => Number(s.Value || 0));
        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels,
                datasets: [{
                    data,
                    hoverOffset: 6,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (ctx) {
                                const val = ctx.raw;
                                const total = ctx.dataset.data.reduce((a,b)=>a+(b||0),0);
                                const pct = total ? ((val/total)*100).toFixed(1) : 0;
                                return ctx.label + ': ' + formatNumber(val) + ' 噸 (' + pct + '%)';
                            }
                        }
                    },
                    legend: { position: 'bottom' }
                }
            }
        });
    })();

    // 4) 最新年度公司排行（Horizontal Bar）
    (function renderTopCompanies() {
        const ctx = document.getElementById('chartTopCompanies').getContext('2d');
        const labels = topCompanies.map(t => '公司 ' + t.CompanyId);
        const data = topCompanies.map(t => Number(t.TotalEmission || 0));
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels,
                datasets: [{
                    label: '總排放量 (噸)',
                    data,
                    borderRadius: 6
                }]
            },
            options: {
                indexAxis: 'y', // horizontal
                responsive: true,
                plugins: {
                    tooltip: { callbacks: { label: ctx => formatNumber(ctx.raw) + ' 噸' } }
                },
                scales: {
                    x: { beginAtZero: true, ticks: { callback: v => formatNumber(v) } }
                }
            }
        });
    })();
</script>